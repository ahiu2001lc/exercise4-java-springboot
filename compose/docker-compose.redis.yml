version: "3.9"

services:
  app:
    build:
      context: ..
      dockerfile: Dockerfile
    image: demo-app:redis
    container_name: backend_redis
    depends_on:
      mariadb:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      TZ: ${TZ:-UTC}
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE:-redis}
      SPRING_CONFIG_LOCATION: /config/
      SPRING_REDIS_HOST: ${REDIS_HOST}
      SPRING_REDIS_PORT: ${REDIS_PORT}
      DB_HOST: mariadb
      DB_PORT: 3306
      DB_NAME: ${DB_NAME:-authorization}
      DB_USER: ${DB_USER:-root}
      DB_PASS: ${DB_PASS:-root123}
      SERVER_PORT: 8080
    ports:
      - "${APP_PORT:-8080}:8080"
    volumes:
      - ./docker/config:/config:ro
    networks: [ backend ]
    restart: unless-stopped

  mariadb:
    image: mariadb:10.11
    container_name: mariadb_redis
    restart: unless-stopped
    environment:
      MARIADB_ROOT_PASSWORD: root123
      MARIADB_DATABASE: ${DB_NAME:-authorization}
    ports:
      - "3306:3306"
    volumes:
      - db_redis:/var/lib/mysql
      - ./docker/initdb:/docker-entrypoint-initdb.d:ro
    networks: [ backend ]
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-proot123" ]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 10s

  phpmyadmin:
    image: phpmyadmin:latest
    container_name: phpmyadmin_redis
    depends_on:
      mariadb:
        condition: service_healthy
    environment:
      PMA_HOST: mariadb
      PMA_PORT: 3306
      UPLOAD_LIMIT: 32M
    ports:
      - "8081:80"
    networks: [ backend ]
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: demo_redis
    ports:
      - "6379:6379"
    networks: [ backend ]
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s

networks:
  backend:
    external: true

volumes:
  db_redis:
